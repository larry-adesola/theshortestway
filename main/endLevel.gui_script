function init(self)
	gui.set_enabled(gui.get_node("background"), false)--so that the screen does not show
	gui.set_enabled(gui.get_node("back"), false)
	gui.set_enabled(gui.get_node("leader"), false)
	gui.set_enabled(gui.get_node("excess"), false)
	gui.set_enabled(gui.get_node("thumbs up"), false)
	gui.set_enabled(gui.get_node("thumbs down"), false)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("end")then
		msg.post(".", "acquire_input_focus")--this allows for inputs
		self.excess = message.excess--this stores the messages into suitable variable
		self.level = message.level

		gui.set_enabled(gui.get_node("background"), true)--so that the screen does show
		gui.set_enabled(gui.get_node("back"), true)
		gui.set_enabled(gui.get_node("leader"), true)
		gui.set_enabled(gui.get_node("excess"), true)

		local text = "Excess Moves: " .. self.excess

		gui.set_text(gui.get_node("excess"), text)--this sets the text dynamically
		
		
		if self.level == 1 then
			if self.excess <8 then
				gui.set_enabled(gui.get_node("thumbs up"), true)--sets the thumbs up to show if passes
			else
				gui.set_enabled(gui.get_node("thumbs down"), true)--sets the thumbs down to true if fail
			end
		elseif self.level == 2 then
			if self.excess <6 then
				gui.set_enabled(gui.get_node("thumbs up"), true)--sets the thumbs up to show if passes
			else
				gui.set_enabled(gui.get_node("thumbs down"), true)--sets the thumbs down to true if fail
			end
		elseif self.level == 3 then
			if self.excess <4 then
				gui.set_enabled(gui.get_node("thumbs up"), true)--sets the thumbs up to show if passes
			else
				gui.set_enabled(gui.get_node("thumbs down"), true)--sets the thumbs down to true if fail
			end
		elseif self.level == 4 then
			if self.excess <2 then
				gui.set_enabled(gui.get_node("thumbs up"), true)--sets the thumbs up to show if passes
			else
				gui.set_enabled(gui.get_node("thumbs down"), true)--sets the thumbs down to true if fail
			end
		end
	end

	if message_id == hash("back")then
		msg.post(".", "acquire_input_focus")--this allows for inputs
	end
end

function on_input(self, action_id, action)
	if action.pressed and gui.pick_node(gui.get_node("back"), action.x, action.y) then
		msg.post(".", "release_input_focus")
		msg.post("main:/controller", "level screen") -- loads level screen
	end

	if action.pressed and gui.pick_node(gui.get_node("leader"), action.x, action.y) then
		msg.post("/leaderbaord#leaderboard", "on")--opens the leaderboard
		msg.post(".", "release_input_focus")
		
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
